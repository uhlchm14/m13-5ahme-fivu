{"version":3,"sources":["main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import * as express from 'express';\r\nimport * as bodyparser from 'body-parser';\r\nimport * as nconf from 'nconf';\r\nimport * as path from 'path';\r\nimport * as http from 'http';\r\nimport { IUser } from './models/user';\r\n\r\nclass Main {\r\n  private _express: express.Express;\r\n  private _config: { port: number };\r\n  private _server: http.Server;\r\n\r\n  private _users: IUser[] = [];\r\n\r\n  public constructor() {\r\n    const configFile = path.join(__dirname, '../config.json');\r\n    console.log(configFile);\r\n    nconf.file(configFile);\r\n    this._config = nconf.get('server');\r\n    if (!this._config || isNaN(this._config.port)) {\r\n      throw new Error('invalid configuration');\r\n    }\r\n\r\n    this._users.push({surname: 'Fink', firstname: 'Matthias', classname: '5AHME'})\r\n    this._users.push({surname: 'Freyler', firstname: 'Lukas', classname: '5AHME'})\r\n    this._users.push({surname: 'Greistorfer', firstname: 'Florian', classname: '5AHME'})\r\n    this._users.push({surname: 'Harrer', firstname: 'Florian', classname: '5AHME'});\r\n\r\n    console.log('Start');\r\n  }\r\n\r\n  public async start(): Promise<void> {\r\n    this._express = express();\r\n    this._express.use(bodyparser.urlencoded({ extended: true }));\r\n    // const pugRenderungEngine = this._server.set('view engine', 'pug');\r\n    // pugRenderungEngine.locals.pretty = true;\r\n\r\n    this._express.get(['/', '/index.html', '/index.htm'], (req, res, next) => this.handleGetStartup(req, res, next));\r\n\r\n    this._express.get('/users', (req, res, next) => this.handleGetUsers(req, res, next));\r\n\r\n    this._express.use(express.static(path.join(__dirname, '../../ngxClient/dist')));\r\n\r\n    this._express.get('/error', (req, res, next) => this.handleGetError(req, res, next));\r\n\r\n    this._express.use((err: any, req: express.Request, res: express.Response, next: express.NextFunction) =>\r\n      this.handleError(err, req, res, next)\r\n    );\r\n\r\n    this._server = http.createServer(this._express).listen(this._config.port);\r\n    console.log('server now listining ( http://localhost:' + this._config.port + ')');\r\n  }\r\n\r\n  private handleGetStartup(req: express.Request, res: express.Response, next: express.NextFunction) {\r\n    try {\r\n      const indexPath = path.join(__dirname, '../../ngxClient/dist/index.html');\r\n      res.sendFile(indexPath);\r\n    } catch (err) {\r\n      next(err);\r\n    }\r\n  }\r\n\r\n  private handleGetError (req: express.Request, res: express.Response, next: express.NextFunction) {\r\n      try {\r\n          throw new Error('I bims a Test-Error');\r\n      } catch (err) {\r\n          next(err);\r\n      }\r\n  }\r\n\r\n  private handleError(err: any, req: express.Request, res: express.Response, next: express.NextFunction) {\r\n    const timeStamp = new Date().toISOString();\r\n    console.log(timeStamp);\r\n    console.log(err);\r\n    res.status(500).send('Internal Error (' + timeStamp + ')');\r\n  }\r\n\r\n  private handleGetUsers(req: express.Request, res: express.Response, next: express.NextFunction) {\r\n    try {\r\n      const rv = JSON.stringify(this._users);\r\n      res.json(this._users);\r\n    } catch (err) {\r\n      next(err);\r\n    }\r\n  }\r\n}\r\n\r\nasync function startup(): Promise<void> {\r\n  const main = new Main();\r\n  await main.start();\r\n}\r\n\r\nstartup().catch(err => {\r\n  console.log(err);\r\n});\r\n"],"sourceRoot":"D:\\Schule\\HTL\\5AHME\\FIVU\\Git\\m13-5ahme-fivu\\projects\\ue11_angularServer\\server"}